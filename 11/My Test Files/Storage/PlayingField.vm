function PlayingField.new 0
push constant 12
call Memory.alloc 1
pop pointer 0
push constant 144
pop this 0
push constant 384
pop this 2
push constant 0
pop this 1
push constant 255
pop this 3
push constant 240
pop this 4
push constant 0
pop this 5
push this 0
push constant 8
sub
push this 1
push this 0
push constant 1
sub
push this 3
call PlayingField.draw 4
pop temp 0
push this 2
push this 1
push this 2
push constant 7
add
push this 3
call PlayingField.draw 4
pop temp 0
push pointer 0
return
function PlayingField.draw 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push argument 0
push argument 1
push argument 2
push argument 3
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function PlayingField.deleteline 0
push argument 0
pop pointer 0
push constant 16384
pop this 6
label WHILE_EXP0
push this 6
push constant 24544
lt
not
if-goto WHILE_END0
push constant 0
not
pop this 11
push this 0
pop this 10
label WHILE_EXP1
push this 10
push this 2
lt
push this 11
and
not
if-goto WHILE_END1
push this 6
push this 10
push constant 16
call Math.divide 2
add
push constant 32
add
pop this 7
push this 7
call Memory.peek 1
pop this 8
push this 10
push constant 16
add
pop this 10
push this 8
push constant 32766
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop this 11
label IF_FALSE0
goto WHILE_EXP1
label WHILE_END1
push this 11
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
pop this 10
label WHILE_EXP2
push this 10
push this 2
lt
not
if-goto WHILE_END2
push constant 1
pop this 9
label WHILE_EXP3
push this 9
push constant 15
lt
not
if-goto WHILE_END3
push this 6
push this 10
push constant 16
call Math.divide 2
add
push constant 32
push this 9
call Math.multiply 2
add
pop this 7
push this 7
call Memory.peek 1
pop this 8
push this 8
push constant 32766
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 7
push constant 0
call Memory.poke 2
pop temp 0
label IF_FALSE2
push this 9
push constant 1
add
pop this 9
goto WHILE_EXP3
label WHILE_END3
push this 10
push constant 16
add
pop this 10
goto WHILE_EXP2
label WHILE_END2
label IF_FALSE1
push this 6
push constant 16
push constant 32
call Math.multiply 2
add
pop this 6
goto WHILE_EXP0
label WHILE_END0
push constant 0
pop this 9
push constant 0
return
function PlayingField.shiftLineDown 0
push argument 0
pop pointer 0
push constant 16384
pop this 6
label WHILE_EXP0
push this 6
push constant 24544
lt
not
if-goto WHILE_END0
push constant 0
not
pop this 11
push this 0
pop this 10
label WHILE_EXP1
push this 10
push this 2
lt
push this 11
and
not
if-goto WHILE_END1
push this 6
push this 10
push constant 16
call Math.divide 2
add
push constant 32
add
pop this 7
push this 7
call Memory.peek 1
pop this 8
push this 10
push constant 16
add
pop this 10
push this 8
push constant 32766
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop this 11
label IF_FALSE0
goto WHILE_EXP1
label WHILE_END1
push this 11
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
pop this 10
label WHILE_EXP2
push this 10
push this 2
lt
not
if-goto WHILE_END2
push this 6
push this 10
push constant 16
call Math.divide 2
add
push constant 32
add
push constant 512
sub
pop this 7
push this 7
call Memory.peek 1
pop this 8
push this 8
push constant 32766
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 1
pop this 9
label WHILE_EXP3
push this 9
push constant 15
lt
not
if-goto WHILE_END3
push this 6
push this 10
push constant 16
call Math.divide 2
add
push constant 32
push this 9
call Math.multiply 2
add
push constant 512
sub
pop this 7
push this 7
call Memory.peek 1
pop this 8
push this 8
push constant 32766
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 7
push constant 0
call Memory.poke 2
pop temp 0
label IF_FALSE3
push this 9
push constant 1
add
pop this 9
goto WHILE_EXP3
label WHILE_END3
push constant 1
pop this 9
label WHILE_EXP4
push this 9
push constant 15
lt
not
if-goto WHILE_END4
push this 6
push this 10
push constant 16
call Math.divide 2
add
push constant 32
push this 9
call Math.multiply 2
add
pop this 7
push this 7
call Memory.peek 1
pop this 8
push this 8
push constant 0
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push this 7
push constant 32766
call Memory.poke 2
pop temp 0
label IF_FALSE4
push this 9
push constant 1
add
pop this 9
goto WHILE_EXP4
label WHILE_END4
label IF_FALSE2
push this 10
push constant 16
add
pop this 10
goto WHILE_EXP2
label WHILE_END2
label IF_FALSE1
push this 6
push constant 16
push constant 32
call Math.multiply 2
add
pop this 6
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function PlayingField.getStartX 0
push argument 0
pop pointer 0
push this 4
return
function PlayingField.getStartY 0
push argument 0
pop pointer 0
push this 5
return
function PlayingField.getX 0
push argument 0
pop pointer 0
push this 0
return
function PlayingField.getY 0
push argument 0
pop pointer 0
push this 1
return
